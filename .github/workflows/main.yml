name: main-worklfow

on:
  push:
    branches:
      - master

jobs:
  #  cleaner:
  #    runs-on: ubuntu-latest
  #    steps:
  #      - name: Runner workspace path
  #        run: |
  #          echo "Cleaning up previous run"
  #          sudo rm -rf "${{ github.workspace }}"

  test-and-build:
    #    needs: cleaner
    runs-on: ubuntu-latest
    steps:
      - name: Check out source code
        id: check_out_source_code
        uses: actions/checkout@v2

      - name: Add git secret to sources list
        run: echo "deb https://dl.bintray.com/sobolevn/deb git-secret main" | sudo tee -a /etc/apt/sources.list

      - name: Add maintainer public key
        run: wget -q -O- --no-check-certificate https://api.bintray.com/users/sobolevn/keys/gpg/public.key | sudo apt-key add -

      - name: Install git-secret
        run: sudo apt-get update && sudo apt-get install git-secret

      - name: Import private key
        shell: bash
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
        run: gpg --batch --import <(echo "$GPG_PRIVATE_KEY")

      - name: Reveal secrets
        id: reveal_secrets
        run: git secret reveal -v -f -p ${{ secrets.GPG_PASSPHRASE }}

      - name: Install dependencies
        id: install_dependencies
        run: npm i

      - name: Type checking
        id: type_checking
        run: npm run check-types

      - name: Linter
        id: linter
        run: npm run lint

      - name: Run tests
        id: tests
        run: npm run test

      - name: Build
        id: build
        run: npm run build

      - name: Workflow status to slack if failure
        uses: act10ns/slack@v1
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: failure()

  bump-version:
    runs-on: ubuntu-latest
    needs: test-and-build
    steps:
      - name: Check out source code
        id: check_out_source_code
        uses: actions/checkout@v2

      - name: "Automated Version Bump"
        id: automated_version_bump
        uses: "phips28/gh-action-bump-version@master"
        with:
          tag-prefix: ""
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Workflow status to slack with steps if failure
        uses: act10ns/slack@v1
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: failure()

  deploy-preprod:
    runs-on: ubuntu-latest
    needs: bump-version
    steps:
      - name: Check out source code
        id: check_out_source_code
        uses: actions/checkout@v2

      - name: Add git secret to sources list
        run: echo "deb https://dl.bintray.com/sobolevn/deb git-secret main" | sudo tee -a /etc/apt/sources.list

      - name: Add maintainer public key
        run: wget -q -O- --no-check-certificate https://api.bintray.com/users/sobolevn/keys/gpg/public.key | sudo apt-key add -

      - name: Install git-secret
        run: sudo apt-get update && sudo apt-get install git-secret

      - name: Import private key
        shell: bash
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
        run: gpg --batch --import <(echo "$GPG_PRIVATE_KEY")

      - name: Reveal secrets
        id: reveal_secrets
        run: git secret reveal -v -f -p ${{ secrets.GPG_PASSPHRASE }}

      # - name: Get project version
      #   id: version
      #   run: |
      #     VERSION=$(node -pe "require('./package.json').version")
      #     echo ::set-output name=tag::$VERSION

      # - name: Get commit short hash
      #   id: short_sha
      #   run: echo "::set-output name=short_sha::$(git rev-parse --short HEAD)"

      - name: Install dependencies
        run: npm ci

      - name: Prepare serverless PREPROD files
        run: cp serverless.yml.preprod serverless.yml && cp -R .serverless.preprod .serverless

      - name: serverless deploy
        uses: serverless/github-action@master
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.SERVERLESS_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SERVERLESS_AWS_SECRET_ACCESS_KEY }}

      - name: Workflow status to slack
        uses: act10ns/slack@v1
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          status: ${{ job.status }}
        if: always()

      - name: Workflow status to slack with steps if failure
        uses: act10ns/slack@v1
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: failure()
